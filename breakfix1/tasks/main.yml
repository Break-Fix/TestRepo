---
# tasks file for breakfix1
- name: Set initial facts
  ansible.builtin.set_fact:
    satellite_hostname: "{{ ansible_fqdn }}"

- name: Ensure satellite is running.
  theforeman.foreman.status_info:
    server_url: "https://{{ satellite_hostname }}"
    username: "{{ satellite_login['username'] }}"
    password: "{{ satellite_login['password'] }}"
    validate_certs: false
  register: status_info

- name: Create client activation key
  theforeman.foreman.activation_key:
    server_url: "https://{{ satellite_hostname }}"
    username: "{{ satellite_login['username'] }}"
    password: "{{ satellite_login['password'] }}"
    validate_certs: false
    name: "{{ activation_key }}"
    organization: "{{ satellite_organization }}"
    lifecycle_environment: "Library"
    content_view: "Default Organization View"
  when: status_info['status']['result'] == "ok"
  register: ak_created

- name: Generate registration command to register the system with Capsule server
  theforeman.foreman.registration_command:
    server_url: "https://{{ satellite_hostname }}"
    username: "{{ satellite_login['username'] }}"
    password: "{{ satellite_login['password'] }}"
    validate_certs: false
    setup_remote_execution: true
    setup_insights: false
    jwt_expiration: 8
    force: true
    insecure: true
    activation_keys: "{{ activation_key }}"
    organization: "{{ satellite_organization }}"
    location: "{{ satellite_location }}"
    smart_proxy: "{{ groups['capsule'][0] }}"
  when: ak_created is success
  register: global_reg_command

- name: Regsiter the client host
  ansible.builtin.command: bash -c "{{ global_reg_command['registration_command'] }}"
  delegate_to: "{{ groups['client'][0] }}"
  register: host_registration
  when: global_reg_command is defined

- name: Break the satellite by adding a proxy in repositories to fail the sync.
  ansible.builtin.command: >
    su - postgres -c "psql pulpcore -c 'update core_remote set proxy_url = '\''http://localhost:3128'\'' where pulp_type = '\''rpm.rpm'\'';'"
  register: break_satellite
  when:
    - status_info['status']['result'] == "ok"
    - host_registration is success

- name: Break the capsule by adding a proxy in repositories to fail content retrieval from capsule.
  ansible.builtin.command: >
    su - postgres -c "psql pulpcore -c 'update core_remote set proxy_url = '\''http://localhost:3128'\'' where pulp_type = '\''rpm.rpm'\'';'"
  delegate_to: "{{ groups['capsule'][0] }}"
  register: break_capsule
  when: break_satellite is success
